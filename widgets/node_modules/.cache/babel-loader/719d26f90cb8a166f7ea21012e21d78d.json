{"ast":null,"code":"var _jsxFileName = \"/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Accordion from \"./components/Accordion\";\nimport Search from \"./components/Search\";\nimport Dropdown from \"./components/Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  label: \"Color Red\",\n  value: \"red\"\n}, {\n  label: \"Color Blue\",\n  value: \"blue\"\n}, {\n  label: \"Lean Mean Green Machine\",\n  value: \"green\"\n}];\n\nconst App = () => {\n  _s();\n\n  const [selected, setSelected] = useState(options[0]);\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    selected: selected,\n    onSelectedChanged: setSelected,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"UHYkxkkd8Iq8BIpzg1d2KfR8eeA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/App.js"],"names":["React","useState","Accordion","Search","Dropdown","options","label","value","App","selected","setSelected"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADY,EAKZ;AACID,EAAAA,KAAK,EAAE,YADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALY,EASZ;AACID,EAAAA,KAAK,EAAE,yBADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATY,CAAhB;;AAeA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACI,OAAO,CAAC,CAAD,CAAR,CAAxC;AACA,sBACI,QAAC,QAAD;AACI,IAAA,QAAQ,EAAEI,QADd;AAEI,IAAA,iBAAiB,EAAEC,WAFvB;AAGI,IAAA,OAAO,EAAEL;AAHb;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CATD;;GAAMG,G;;KAAAA,G;AAWN,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react'\nimport Accordion from \"./components/Accordion\";\nimport Search from \"./components/Search\"\nimport Dropdown from \"./components/Dropdown\";\n\nconst options = [\n    {\n        label: \"Color Red\",\n        value: \"red\"\n    },\n    {\n        label: \"Color Blue\",\n        value: \"blue\"\n    },\n    {\n        label: \"Lean Mean Green Machine\",\n        value: \"green\"\n    }\n]\n\nconst App = () => {\n    const [selected, setSelected] = useState(options[0])\n    return (\n        <Dropdown\n            selected={selected}\n            onSelectedChanged={setSelected}\n            options={options}\n        />\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}