{"ast":null,"code":"var _jsxFileName = \"/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/components/Translate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Dropdown from \"./Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  \"language\": 'Afrikaans',\n  \"value\": 'af'\n}, {\n  \"language\": 'Arabic',\n  \"value\": 'ar'\n}, {\n  \"language\": 'Hindi',\n  \"value\": 'hi'\n}];\n\nconst Translate = () => {\n  _s();\n\n  const [language, setLanguage] = useState(options[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      statement: \"Choose a Language\",\n      options: options,\n      selected: language,\n      onSelectedChanged: setLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Translate, \"UYI9cm/6CGJMXv3SKx4PctD5XM4=\");\n\n_c = Translate;\nexport default Translate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Translate\");","map":{"version":3,"sources":["/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/components/Translate.js"],"names":["React","useEffect","useRef","useState","Dropdown","options","Translate","language","setLanguage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACI,cAAY,WADhB;AAEI,WAAS;AAFb,CADY,EAKZ;AACI,cAAY,QADhB;AAEI,WAAS;AAFb,CALY,EASZ;AACI,cAAY,OADhB;AAEI,WAAS;AAFb,CATY,CAAhB;;AAeA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACE,OAAO,CAAC,CAAD,CAAR,CAAxC;AACA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAE,mBAArB;AAA0C,MAAA,OAAO,EAAEA,OAAnD;AAA4D,MAAA,QAAQ,EAAEE,QAAtE;AAAgF,MAAA,iBAAiB,EAAEC;AAAnG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;;GAAMF,S;;KAAAA,S;AASN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport Dropdown from \"./Dropdown\";\n\nconst options = [\n    {\n        \"language\": 'Afrikaans',\n        \"value\": 'af'\n    },\n    {\n        \"language\": 'Arabic',\n        \"value\": 'ar'\n    },\n    {\n        \"language\": 'Hindi',\n        \"value\": 'hi'\n    }\n]\n\nconst Translate = () => {\n    const [language, setLanguage] = useState(options[0])\n    return (\n        <div>\n            <Dropdown statement={\"Choose a Language\"} options={options} selected={language} onSelectedChanged={setLanguage}/>\n        </div>\n    )\n}\n\nexport default Translate"]},"metadata":{},"sourceType":"module"}