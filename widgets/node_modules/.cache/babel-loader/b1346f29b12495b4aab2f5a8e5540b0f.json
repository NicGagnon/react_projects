{"ast":null,"code":"var _jsxFileName = \"/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Accordion from \"./components/Accordion\";\nimport Search from \"./components/Search\";\nimport Dropdown from \"./components/Dropdown\";\nimport Translate from \"./components/Translate\";\nimport Route from \"./components/Route\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  question: \"What is React?\",\n  answer: \"It's a Javascript framework\"\n}, {\n  question: \"How many pokemons are in the first generation\",\n  answer: \"There are 151 if you count Mew\"\n}, {\n  question: \"What's Nic's favorite band?\",\n  answer: \"Blink 182\"\n}];\nconst options = [{\n  label: \"Color Red\",\n  value: \"red\"\n}, {\n  label: \"Color Blue\",\n  value: \"blue\"\n}, {\n  label: \"Lean Mean Green Machine\",\n  value: \"green\"\n}];\n\nconst App = () => {\n  _s();\n\n  const [selected, setSelected] = useState(options[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/list\",\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dropdown\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        statement: \"Select a color\",\n        options: options,\n        selected: selected,\n        onSelectedChanged: setSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/translate\",\n      children: /*#__PURE__*/_jsxDEV(Translate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"UHYkxkkd8Iq8BIpzg1d2KfR8eeA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/App.js"],"names":["React","useState","Accordion","Search","Dropdown","Translate","Route","Header","items","question","answer","options","label","value","App","selected","setSelected"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,QAAQ,EAAE,gBADd;AAEIC,EAAAA,MAAM,EAAE;AAFZ,CADU,EAKV;AACID,EAAAA,QAAQ,EAAE,+CADd;AAEIC,EAAAA,MAAM,EAAE;AAFZ,CALU,EASV;AACID,EAAAA,QAAQ,EAAE,6BADd;AAEIC,EAAAA,MAAM,EAAE;AAFZ,CATU,CAAd;AAeA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADY,EAKZ;AACID,EAAAA,KAAK,EAAE,YADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALY,EASZ;AACID,EAAAA,KAAK,EAAE,yBADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATY,CAAhB;;AAgBA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACU,OAAO,CAAC,CAAD,CAAR,CAAxC;AACA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,GAAb;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,OAAb;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,WAAb;AAAA,6BACI,QAAC,QAAD;AACA,QAAA,SAAS,EAAE,gBADX;AAEA,QAAA,OAAO,EAAEG,OAFT;AAGA,QAAA,QAAQ,EAAEI,QAHV;AAIA,QAAA,iBAAiB,EAAEC;AAJnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ,eAeI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,YAAb;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAvBD;;GAAMF,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react'\nimport Accordion from \"./components/Accordion\";\nimport Search from \"./components/Search\"\nimport Dropdown from \"./components/Dropdown\";\nimport Translate from \"./components/Translate\";\nimport Route from \"./components/Route\"\nimport Header from \"./components/Header\";\n\nconst items = [\n    {\n        question: \"What is React?\",\n        answer: \"It's a Javascript framework\"\n    },\n    {\n        question: \"How many pokemons are in the first generation\",\n        answer: \"There are 151 if you count Mew\"\n    },\n    {\n        question: \"What's Nic's favorite band?\",\n        answer: \"Blink 182\"\n    }\n]\n\nconst options = [\n    {\n        label: \"Color Red\",\n        value: \"red\"\n    },\n    {\n        label: \"Color Blue\",\n        value: \"blue\"\n    },\n    {\n        label: \"Lean Mean Green Machine\",\n        value: \"green\"\n    }\n]\n\n\nconst App = () => {\n    const [selected, setSelected] = useState(options[0])\n    return (\n        <div>\n            <Header/>\n            <Route path={\"/\"}>\n                <Accordion items={items} />\n            </Route>\n            <Route path={\"/list\"}>\n                <Search />\n            </Route>\n            <Route path={\"/dropdown\"}>\n                <Dropdown\n                statement={\"Select a color\"}\n                options={options}\n                selected={selected}\n                onSelectedChanged={setSelected}/>\n            </Route>\n            <Route path={\"/translate\"}>\n                <Translate />\n            </Route>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}