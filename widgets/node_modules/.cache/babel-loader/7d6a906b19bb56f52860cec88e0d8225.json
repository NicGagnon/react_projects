{"ast":null,"code":"var _jsxFileName = \"/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/components/Translate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Dropdown from \"./Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  \"label\": 'Afrikaans',\n  \"value\": 'af'\n}, {\n  \"label\": 'Arabic',\n  \"value\": 'ar'\n}, {\n  \"label\": 'Hindi',\n  \"value\": 'hi'\n}];\n\nconst Translate = () => {\n  _s();\n\n  const [language, setLanguage] = useState(options[0]);\n  const [text, setText] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      statement: \"Choose a Language\",\n      options: options,\n      selected: language,\n      onSelectedChanged: setLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Translate, \"XTa7u0oj1J4OddqsnPXMdI6IB8w=\");\n\n_c = Translate;\nexport default Translate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Translate\");","map":{"version":3,"sources":["/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/components/Translate.js"],"names":["React","useEffect","useRef","useState","Dropdown","options","Translate","language","setLanguage","text","setText","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACI,WAAS,WADb;AAEI,WAAS;AAFb,CADY,EAKZ;AACI,WAAS,QADb;AAEI,WAAS;AAFb,CALY,EASZ;AACI,WAAS,OADb;AAEI,WAAS;AAFb,CATY,CAAhB;;AAeA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACE,OAAO,CAAC,CAAD,CAAR,CAAxC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,KAAK,EAAEM,IADX;AAEI,UAAA,QAAQ,EAAGE,CAAD,IAAOD,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAF5B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD;AACI,MAAA,SAAS,EAAE,mBADf;AAEI,MAAA,OAAO,EAAER,OAFb;AAGI,MAAA,QAAQ,EAAEE,QAHd;AAII,MAAA,iBAAiB,EAAEC;AAJvB;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CArBD;;GAAMF,S;;KAAAA,S;AAuBN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport Dropdown from \"./Dropdown\";\n\nconst options = [\n    {\n        \"label\": 'Afrikaans',\n        \"value\": 'af'\n    },\n    {\n        \"label\": 'Arabic',\n        \"value\": 'ar'\n    },\n    {\n        \"label\": 'Hindi',\n        \"value\": 'hi'\n    }\n]\n\nconst Translate = () => {\n    const [language, setLanguage] = useState(options[0])\n    const [text, setText] = useState('')\n    return (\n        <div>\n            <div className={\"ui form\"}>\n                <div className={\"field\"}>\n                    <label>Enter Text</label>\n                    <input\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}/>\n                </div>\n            </div>\n            <Dropdown\n                statement={\"Choose a Language\"}\n                options={options}\n                selected={language}\n                onSelectedChanged={setLanguage}\n            />\n        </div>\n    )\n}\n\nexport default Translate"]},"metadata":{},"sourceType":"module"}