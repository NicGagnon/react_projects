{"ast":null,"code":"var _jsxFileName = \"/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/components/Translate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport googleTranslate from \"../api/googleTranslate\";\nimport Dropdown from \"./Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  \"label\": 'Afrikaans',\n  \"value\": 'af'\n}, {\n  \"label\": 'Arabic',\n  \"value\": 'ar'\n}, {\n  \"label\": 'Hindi',\n  \"value\": 'hi'\n}];\n\nconst Translate = () => {\n  _s();\n\n  const [language, setLanguage] = useState(options[0]);\n  const [text, setText] = useState('');\n  const [translatedText, setTranslatedText] = useState('');\n  useEffect(() => {\n    const translate = async () => {\n      const newText = await googleTranslate.post('', {\n        params: {\n          q: text,\n          target: language.value\n        }\n      });\n      setTranslatedText(newText.data);\n    };\n\n    translate();\n  }, [text, language]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      statement: \"Choose a Language\",\n      options: options,\n      selected: language,\n      onSelectedChanged: setLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui header\",\n      children: translatedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Translate, \"sdNSwWj6dHmHSifDbHazKXJ1eug=\");\n\n_c = Translate;\nexport default Translate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Translate\");","map":{"version":3,"sources":["/Users/n.gagnon/Documents/Sandbox/reactjs/widgets/src/components/Translate.js"],"names":["React","useEffect","useRef","useState","googleTranslate","Dropdown","options","Translate","language","setLanguage","text","setText","translatedText","setTranslatedText","translate","newText","post","params","q","target","value","data","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACI,WAAS,WADb;AAEI,WAAS;AAFb,CADY,EAKZ;AACI,WAAS,QADb;AAEI,WAAS;AAFb,CALY,EASZ;AACI,WAAS,OADb;AAEI,WAAS;AAFb,CATY,CAAhB;;AAeA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACG,OAAO,CAAC,CAAD,CAAR,CAAxC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,SAAS,GAAG,YAAY;AAC1B,YAAMC,OAAO,GAAG,MAAMX,eAAe,CAACY,IAAhB,CAAqB,EAArB,EAAyB;AAC3CC,QAAAA,MAAM,EAAE;AACJC,UAAAA,CAAC,EAAER,IADC;AAEJS,UAAAA,MAAM,EAAEX,QAAQ,CAACY;AAFb;AADmC,OAAzB,CAAtB;AAMAP,MAAAA,iBAAiB,CAACE,OAAO,CAACM,IAAT,CAAjB;AACH,KARD;;AASAP,IAAAA,SAAS;AAEZ,GAZQ,EAYN,CAACJ,IAAD,EAAOF,QAAP,CAZM,CAAT;AAcA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,KAAK,EAAEE,IADX;AAEI,UAAA,QAAQ,EAAGY,CAAD,IAAOX,OAAO,CAACW,CAAC,CAACH,MAAF,CAASC,KAAV;AAF5B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,QAAD;AACI,MAAA,SAAS,EAAE,mBADf;AAEI,MAAA,OAAO,EAAEd,OAFb;AAGI,MAAA,QAAQ,EAAEE,QAHd;AAII,MAAA,iBAAiB,EAAEC;AAJvB;AAAA;AAAA;AAAA;AAAA,YAVJ,eAgBI;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,gBAA8BG;AAA9B;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAxCD;;GAAML,S;;KAAAA,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport googleTranslate from \"../api/googleTranslate\";\nimport Dropdown from \"./Dropdown\";\n\nconst options = [\n    {\n        \"label\": 'Afrikaans',\n        \"value\": 'af'\n    },\n    {\n        \"label\": 'Arabic',\n        \"value\": 'ar'\n    },\n    {\n        \"label\": 'Hindi',\n        \"value\": 'hi'\n    }\n]\n\nconst Translate = () => {\n    const [language, setLanguage] = useState(options[0])\n    const [text, setText] = useState('')\n    const [translatedText, setTranslatedText] = useState('')\n\n    useEffect(() => {\n        const translate = async () => {\n            const newText = await googleTranslate.post('', {\n                params: {\n                    q: text,\n                    target: language.value\n                }\n            })\n            setTranslatedText(newText.data)\n        }\n        translate()\n\n    }, [text, language])\n\n    return (\n        <div>\n            <div className={\"ui form\"}>\n                <div className={\"field\"}>\n                    <label>Enter Text</label>\n                    <input\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                    />\n                </div>\n            </div>\n            <Dropdown\n                statement={\"Choose a Language\"}\n                options={options}\n                selected={language}\n                onSelectedChanged={setLanguage}\n            />\n            <hr />\n            <div className={\"ui header\"}>{translatedText}</div>\n        </div>\n    )\n}\n\nexport default Translate"]},"metadata":{},"sourceType":"module"}