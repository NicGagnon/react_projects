{"ast":null,"code":"var _jsxFileName = \"/Users/n.gagnon/Documents/Sandbox/reactjs/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  render() {\n    if (this.state.errorMessage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Error: \", this.state.errorMessage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Latitude: \", /*#__PURE__*/_jsxDEV(SeasonDisplay, {\n          lat: this.state.lat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 36\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(SeasonDisplay, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 17\n}, this), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/n.gagnon/Documents/Sandbox/reactjs/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KAFsB;AAAA;;AAI9BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAACR,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,KAAd,CADhB,EAEIC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAACP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAAnB,KAAd,CAFX;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKd,KAAL,CAAWE,YAAf,EAA6B;AACzB,0BAAO;AAAA,+BAAc,KAAKF,KAAL,CAAWE,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAI,KAAKF,KAAL,CAAWC,GAAf,EAAoB;AAChB,0BAAO;AAAA,+CAAgB,QAAC,aAAD;AAAe,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH;;AApB6B;;AAuBlCL,QAAQ,CAACkB,MAAT,eAAgB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAmCC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAnC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay'\n\nclass App extends React.Component {\n\n    state = {lat: null, errorMessage: ''};\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({lat: position.coords.latitude}),\n            err => this.setState({errorMessage: err.message})\n        );\n    }\n\n    render() {\n        if (this.state.errorMessage) {\n            return <div> Error: {this.state.errorMessage} </div>\n        }\n        if (this.state.lat) {\n            return <div> Latitude: <SeasonDisplay lat={this.state.lat}/> </div>\n        }\n        return <Spinner />\n\n    }\n}\n\nReactDOM.render(<SeasonDisplay />, document.querySelector('#root'))"]},"metadata":{},"sourceType":"module"}